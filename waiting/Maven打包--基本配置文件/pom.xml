<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cpapp</groupId>
    <artifactId>cpappservice</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <spring.version>5.3.5</spring.version>
    </properties>

    <!-- 关联阿里云maven仓库 -->
    <repositories>
        <repository>
            <id>alimaven</id>
            <name>Maven China Mirror</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>alimaven</id>
            <name>Maven China Mirror</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!--spring 框架-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>cpappservice</finalName><!-- 发布前执行时，生成cpappservice.war文件-->
        <!-- 使用maven编译、运行、部署时用到的插件，如果通过IDE的tomcat启动，则不会用到-->
        <directory>target</directory><!-- 这是打包的文件的路径。默认是该工程的根目录。 -->
        <plugins>
            <!-- 使用Tomcat插件 -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <!--configuration节点的内容都可以省略不写，有默认值的-->
                <configuration>
                    <path>/cpappservice</path><!-- 运行之后访问的路径 -->
                    <port>12304</port><!-- 运行之后访问端口 -->
                    <uriEncoding>UTF8</uriEncoding><!-- 编码 -->
                    <server>tomcat7</server><!-- 对应maven下的配置文件的setting.xml的server的id -->
                    <url>http://118.178.185.211:12304/manager/text</url><!-- 部署到服务器的地址,url为tomcat管理地址，不同的容器，域名和端口可能不同，注意url的最后必须加上/text 否则会出错-->
                    <!--配置远程tomcat的路径 begin-->
                    <username>admin</username>
                    <password>123456</password>
                    <!--配置远程tomcat的路径 end-->
                </configuration>
            </plugin>
            <!-- mvn compile配置编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source> <!-- 源代码使用的开发版本 -->
                    <target>1.7</target> <!-- 需要生成的目标class文件的编译版本 -->
                    <encoding>UTF-8</encoding><!-- 指定编码格式，否则在DOS下运行mvn compile命令时会出现莫名的错误，因为系统默认使用GBK编码 -->
                </configuration>
            </plugin>
            <!-- 处理资源文件插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding><!-- 指定编码格式，否则在DOS下运行mvn命令时当发生文件资源copy时将使用系统默认使用GBK编码 -->
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>